import CO2_GDPdata from '../static/CO2_GDPdata.csv'    // import dataset
"use strict";     // the code should be executed in "strict mode".
                  // With strict mode, you can not, for example, use undeclared variables

var datapoints = [];   // used to store data later
var filtered = [];

//var sortedGDP = CO2_GDPdata
 //.filter(d => d['Country'] == 'High income' || d['Country'] == 'Low income' || d['Country'] == 'Upper middle income' || d['Country'] == 'Lower middle income')

//console.log(sortedGDP)


const options = {
  config: {
    // Vega-Lite default configuration
  },
  init: (view) => {
    // initialize tooltip handler
    view.tooltip(new vegaTooltip.Handler().call);
  },
  view: {
    // view constructor options
    // remove the loader if you don't want to default to vega-datasets!
    //   loader: vega.loader({
    //     baseURL: "",
    //   }),
    renderer: "canvas",
  },
};

vl.register(vega, vegaLite, options);

// Again, We use d3.csv() to process data
d3.csv(CO2_GDPdata).then(function(data) {
  data.forEach(function(d){
    datapoints.push(d);
    if (d.Country == 'High income') {
       filtered.push(d);
     }
  })
  drawPlotVegaLite();
});

function drawPlotVegaLite() {
	
		const selection = vl.selectSingle('Sorted Income')
   .fields('Country','YearQ')         
   .init({Country: countries[0], YearQ: yearz[0]})  
   .bind({Country: vl.menu(countries),YearQ: vl.slider(1960,2016,1)});


    // Nothing changed below
    return vl.markPoint({filled:true})
   .data(sortedGDP2)
   .select(selection)
   .encode(
     vl.color().if(selection, vl.value('gold')).value("gray"),
     vl.x().fieldQ('GDP'),
     vl.y().fieldQ('CO2'),
     vl.opacity().if(selection).value(0.1),
     vl.tooltip().fieldQ('Year')
   )
   .render()
}
