{"version":3,"sources":["vegaliteViz.js"],"names":["datapoints","filtered","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","CO2_GDPdata","then","data","forEach","d","push","Country","drawPlotVegaLite","selection","selectSingle","fields","Year","bind","menu","slider","markPoint","filled","select","encode","color","if","value","x","fieldQ","y","opacity","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":"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","file":"vegaliteViz.4641dbce.js","sourceRoot":"../src","sourcesContent":["import CO2_GDPdata from '../static/CO2_GDPdata.csv'    // import dataset\n\"use strict\";     // the code should be executed in \"strict mode\".\n                  // With strict mode, you can not, for example, use undeclared variables\n\nvar datapoints = [];   // used to store data later\nvar filtered = [];\n\n//var sortedGDP = CO2_GDPdata\n //.filter(d => d['Country'] == 'High income' || d['Country'] == 'Low income' || d['Country'] == 'Upper middle income' || d['Country'] == 'Lower middle income')\n\n//console.log(CO2_GDPdata)\n\n\nconst options = {\n  config: {\n    // Vega-Lite default configuration\n  },\n  init: (view) => {\n    // initialize tooltip handler\n    view.tooltip(new vegaTooltip.Handler().call);\n  },\n  view: {\n    // view constructor options\n    // remove the loader if you don't want to default to vega-datasets!\n    //   loader: vega.loader({\n    //     baseURL: \"\",\n    //   }),\n    renderer: \"canvas\",\n  },\n};\n\nvl.register(vega, vegaLite, options);\n\n// Again, We use d3.csv() to process data\nd3.csv(CO2_GDPdata).then(function(data) {\n  data.forEach(function(d){\n    datapoints.push(d);\n    if (d.Country == 'High income' || d.Country == 'Low income' || d.Country == 'Lower middle income' || d.Country == 'Upper middle income') {\n       filtered.push(d);\n     }\n  })\n  drawPlotVegaLite();\n});\n\n\nfunction drawPlotVegaLite() {\n  const selection = vl.selectSingle('Sorted Income')\n   .fields('Country','Year')         \n   .init({Country: 'Low income', Year: '1960'})  \n   .bind({Country: vl.menu(['Low income','High income','Upper middle income','Lower middle income']),Year: vl.slider(1960,2016,1)});\n\n\n    // Nothing changed below\n    return vl.markPoint({filled:true})\n   .data(filtered)\n   .select(selection)\n   .encode(\n     vl.color().if(selection, vl.value('gold')).value(\"gray\"),\n     vl.x().fieldQ('GDP'),\n     vl.y().fieldQ('CO2'),\n     vl.opacity().if(selection).value(0.1),\n     vl.tooltip().fieldQ('Year')\n   )\n   .width(450)\n   .height(450)\n   .render()\n   .then(viewElement => {\n\tdocument.getElementById('view').appendChild(viewElement);\n  });\n}\n"]}