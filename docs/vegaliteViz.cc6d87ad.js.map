{"version":3,"sources":["vegaliteViz.js"],"names":["datapoints","filtered","SortedGDP2","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","CO2_GDPdata","then","data","forEach","d","push","Country","map","Year","CO2","GDP","CO2perCapita","GDPperCapita","drawPlotVegaLite","selection","selectSingle","fields","bind","menu","slider","markPoint","filled","select","encode","color","if","value","x","fieldQ","y","opacity","size","width","height","render","viewElement","document","getElementById","appendChild"],"mappings":"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","file":"vegaliteViz.cc6d87ad.js","sourceRoot":"../src","sourcesContent":["import CO2_GDPdata from '../static/CO2_GDPdata_edit.csv'    // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nvar datapoints = [];   // used to store data later\r\nvar filtered = [];\r\nvar SortedGDP2 = [];\r\n\r\n//var sortedGDP = CO2_GDPdata\r\n //.filter(d => d['Country'] == 'High income' || d['Country'] == 'Low income' || d['Country'] == 'Upper middle income' || d['Country'] == 'Lower middle income')\r\n\r\n//console.log(CO2_GDPdata)\r\n\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\n// Again, We use d3.csv() to process data\r\nd3.csv(CO2_GDPdata).then(function(data) {\r\n  data.forEach(function(d){\r\n    datapoints.push(d);\r\n    if (d.Country == 'High income' ||\r\n\td.Country == 'Low income' ||\r\n\td.Country == 'Lower middle income' ||\r\n\td.Country == 'Upper middle income') {\r\n       filtered.push(d);\r\n     }\r\n  });\r\n\r\n  SortedGDP2 = filtered.map((d) => {\r\n\treturn { Country:d.Country, Year: +d.Year, CO2: +d.CO2, GDP: +d.GDP, CO2perCapita: +d.CO2perCapita, GDPperCapita: +d.GDPperCapita };\r\n  });\r\n\r\n  drawPlotVegaLite();\r\n});\r\n\r\n\r\nfunction drawPlotVegaLite() {\r\n  const selection = vl.selectSingle('Sorted Income')\r\n   .fields('Country','Year')         \r\n   .init({Country: 'High income', Year: '1960'})  \r\n   .bind({Country: vl.menu(['Low income','High income','Upper middle income','Lower middle income']),Year: vl.slider(1960,2016,1)});\r\n\r\n\r\n    // Nothing changed below\r\n    return vl.markPoint({filled:true})\r\n   .data(SortedGDP2)\r\n   .select(selection)\r\n   .encode(\r\n     vl.color().if(selection, vl.value('green')).value(\"gray\"),\r\n     vl.x().fieldQ('GDPperCapita'),\r\n     vl.y().fieldQ('CO2perCapita'),\r\n     vl.opacity().if(selection).value(0.1),\r\n     vl.tooltip(['Year','Country']),\r\n     vl.size().value(100)\r\n   )\r\n   .width(900)\r\n   .height(550)\r\n   .render()\r\n   .then(viewElement => {\r\n\tdocument.getElementById('view').appendChild(viewElement);\r\n  });\r\n}\r\n"]}